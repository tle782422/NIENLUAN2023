AWSTemplateFormatVersion: '2010-09-09'
Description: API service - customer service
Parameters:
  EnvironmentName: 
    Type: String
    Default: msdemo
    Description: Name of the environment.
  ServiceName:
    Type: String
    Default: "customer-service"
    Description: Service name
  ImageUrl:
    Type: String
    Default: 724605254105.dkr.ecr.us-east-1.amazonaws.com/customer-service
    Description: The url of a docker image
  ContainerPort:
    Type: Number
    Default: 8081
    Description: API port
  TaskCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  TaskMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  Path:
    Type: String
    Default: "/*"
    Description: A path on the public load balancer.
  Priority:
    Type: Number
    Default: 5
    Description: The priority for the routing rule.
  DesiredCount:
    Type: Number
    Default: 2
    Description: How many copies of the service task to run
  Role:
    Type: String
    Default: ""
    Description: (Optional) An IAM role to give the service's containers if the code within needs to
                 access other AWS resources like S3 buckets, DynamoDB tables, etc

Conditions:
  HasCustomRole: !Not [ !Equals [!Ref 'Role', ''] ]

Resources:
  # Nhóm LogGroup để lưu trữ nhật ký bộ chứa cho dịch vụ này
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]


    # Định nghĩa TaskDefinition. Đây là một mô tả siêu dữ liệu đơn giản về những gì
    # container để chạy và vùng chứa đó có những yêu cầu về tài nguyên nào.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'TaskCpu'
      Memory: !Ref 'TaskMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ECSTaskExecutionRole']]
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Cpu: !Ref 'TaskCpu'
          Memory: !Ref 'TaskMemory'
          Image: !Ref 'ImageUrl'
          Environment:
            - Name: SOME_ENDPOINT
              Value: 'TODO'
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'

  # A target group. Sử dụng để theo dõi tất cả các tasks, và địa chỉ IP
  # số cổng nào. Bạn có thể tự truy vấn nó,
  # để tự mình sử dụng các địa chỉ, nhưng hầu hết nhóm mục tiêu này chỉ
  # được kết nối với bộ cân bằng tải ứng dụng hoặc bộ cân bằng tải mạng, vì vậy
  # nó có thể tự động phân phối lưu lượng truy cập trên tất cả các mục tiêu.
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Name: !Ref 'ServiceName'
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: false
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'VPCId']]

  # Tạo quy tắc trên bộ cân bằng tải để định tuyến lưu lượng đến nhóm mục tiêu
  LoadBalancerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref 'TargetGroup'
          Type: 'forward'
      Conditions:
        - Field: path-pattern
          Values: [!Ref 'Path']
      ListenerArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'PublicLoadBalancerListener']]
      Priority: !Ref 'Priority'


